export const abi = [
  {
    inputs: [{ internalType: 'address', name: '_vault', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'id', type: 'uint256' },
      { internalType: 'address', name: '_lender', type: 'address' },
    ],
    name: 'addBorrowerToRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checkForDefaulters',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'lender', type: 'address' },
          { internalType: 'address', name: 'borrower', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint256', name: 'interest', type: 'uint256' },
          { internalType: 'uint256', name: 'duration', type: 'uint256' },
          { internalType: 'bool', name: 'isFinalised', type: 'bool' },
          { internalType: 'uint256', name: 'genesisTime', type: 'uint256' },
          { internalType: 'uint256', name: 'emi', type: 'uint256' },
          { internalType: 'bool', name: 'defaulted', type: 'bool' },
          { internalType: 'uint256', name: 'amountRepaid', type: 'uint256' },
        ],
        internalType: 'struct Vault.Request[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'convertRequestToOffer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'uint256', name: '_interest', type: 'uint256' },
      { internalType: 'uint256', name: '_duration', type: 'uint256' },
    ],
    name: 'createRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDefaulterAddress',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllRequests',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'lender', type: 'address' },
          { internalType: 'address', name: 'borrower', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint256', name: 'interest', type: 'uint256' },
          { internalType: 'uint256', name: 'duration', type: 'uint256' },
          { internalType: 'bool', name: 'isFinalised', type: 'bool' },
          { internalType: 'uint256', name: 'genesisTime', type: 'uint256' },
          { internalType: 'uint256', name: 'emi', type: 'uint256' },
          { internalType: 'bool', name: 'defaulted', type: 'bool' },
          { internalType: 'uint256', name: 'amountRepaid', type: 'uint256' },
        ],
        internalType: 'struct Vault.Request[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBorrowerRequest',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'lender', type: 'address' },
          { internalType: 'address', name: 'borrower', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint256', name: 'interest', type: 'uint256' },
          { internalType: 'uint256', name: 'duration', type: 'uint256' },
          { internalType: 'bool', name: 'isFinalised', type: 'bool' },
          { internalType: 'uint256', name: 'genesisTime', type: 'uint256' },
          { internalType: 'uint256', name: 'emi', type: 'uint256' },
          { internalType: 'bool', name: 'defaulted', type: 'bool' },
          { internalType: 'uint256', name: 'amountRepaid', type: 'uint256' },
        ],
        internalType: 'struct Vault.Request[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],
    name: 'getCid',
    outputs: [{ internalType: 'string[]', name: '', type: 'string[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_lender', type: 'address' }],
    name: 'getNotNullLenderRequests',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'id', type: 'uint256' },
          { internalType: 'address', name: 'lender', type: 'address' },
          { internalType: 'address', name: 'borrower', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint256', name: 'interest', type: 'uint256' },
          { internalType: 'uint256', name: 'duration', type: 'uint256' },
          { internalType: 'bool', name: 'isFinalised', type: 'bool' },
          { internalType: 'uint256', name: 'genesisTime', type: 'uint256' },
          { internalType: 'uint256', name: 'emi', type: 'uint256' },
          { internalType: 'bool', name: 'defaulted', type: 'bool' },
          { internalType: 'uint256', name: 'amountRepaid', type: 'uint256' },
        ],
        internalType: 'struct Vault.Request[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'payDues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'id', type: 'uint256' }],
    name: 'removeBorrowerFromRequest',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_user', type: 'address' },
      { internalType: 'string', name: '_cid', type: 'string' },
    ],
    name: 'setCid',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],
    name: 'setOwner',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
